{"ast":null,"code":"var _jsxFileName = \"/Users/newowner/crwn-clothing/src/pages/shop/shop.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubcribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(UpdateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/newowner/crwn-clothing/src/pages/shop/shop.jsx"],"names":["React","Component","connect","Route","CollectionPage","CollectionsOverview","WithSpinner","firestore","convertCollectionsSnapshotToMap","UpdateCollections","CollectionsOverviewWithSpinner","ShopPage","state","loading","unsubcribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;;AAEA,MAAMM,QAAN,SAAuBV,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BW,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAK/BC,sBAL+B,GAKN,IALM;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAwB,KAAKC,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKL,sBAAL,GAA8BI,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAL,MAAAA,iBAAiB,CAACM,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ6B,CAA9B;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEtB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA1B8B;;AA6BjC,MAAMuB,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,iBAAiB,EAAEM,cAAc,IAAIM,QAAQ,CAACnB,iBAAiB,CAACa,cAAD,CAAlB;AADL,CAAf,CAA3B;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport CollectionPage from '../collection/collection';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nclass ShopPage extends Component {\n  state = {\n    loading: true\n  };\n\n  unsubcribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collections'); \n    \n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  } \n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    );\n  }\n}  \n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: collectionsMap => dispatch(UpdateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}