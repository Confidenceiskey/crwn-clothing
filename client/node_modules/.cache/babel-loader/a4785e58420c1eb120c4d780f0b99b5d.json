{"ast":null,"code":"var _jsxFileName = \"/Users/newowner/crwn-clothing/src/components/signin/signin.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button';\nimport FormInput from '../form-input/form-input';\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\nimport './signin.scss';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart(email, password); // try {\n      //   await auth.signInWithEmailAndPassword(email, password);\n      //   this.setState({ email: email, password: password });\n      // } catch(err) {\n      //   console.log(err);\n      // }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"Email\",\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Sign In With Google \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/newowner/crwn-clothing/src/components/signin/signin.jsx"],"names":["React","Component","connect","CustomButton","FormInput","emailSignInStart","googleSignInStart","SignIn","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CustomButton from '../custom-button/custom-button';\nimport FormInput from '../form-input/form-input';\n\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\n\nimport './signin.scss';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { emailSignInStart } = this.props;\n\n    emailSignInStart(email, password);\n\n    // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: email, password: password });\n    // } catch(err) {\n    //   console.log(err);\n    // }\n\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value});\n  }\n\n  render() {\n    const { googleSignInStart } = this.props;\n\n    return (\n      <div className='signin'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput name=\"email\" type=\"email\" value={this.state.email} label=\"Email\" handleChange={this.handleChange} required />\n          <FormInput name=\"password\" type=\"password\" value={this.state.password} label=\"Password\" handleChange={this.handleChange} required />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">Sign In</CustomButton>\n            <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn> Sign In With Google </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}