{"ast":null,"code":"var _jsxFileName = \"/Users/newowner/crwn-clothing/src/pages/shop/shop.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionPageContainer from '../collection/collection.container';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      IsCollectionLoaded,\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !IsCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  IsCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/newowner/crwn-clothing/src/pages/shop/shop.jsx"],"names":["React","Component","connect","Route","CollectionPageContainer","CollectionsOverviewContainer","fetchCollectionsStartAsync","ShopPage","componentDidMount","props","render","IsCollectionLoaded","match","path","mapStateToProps","createStructuredSelector","selectIsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEF,MAAAA;AAAF,QAAiC,KAAKG,KAA5C;AACAH,IAAAA,0BAA0B;AAC3B;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAAgC,KAAKH,KAA3C;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAER,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACE;AAAvC,SAA+DF,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAd8B;;AAiBjC,MAAMK,eAAe,GAAGC,wBAAwB,CAAC;AAC/CJ,EAAAA,kBAAkB,EAAEK;AAD2B,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCZ,EAAAA,0BAA0B,EAAG,MAAMY,QAAQ,CAACZ,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport CollectionPageContainer from '../collection/collection.container';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  } \n\n  render() {\n    const { IsCollectionLoaded, match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!IsCollectionLoaded} {...props} />} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  IsCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync:  () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}